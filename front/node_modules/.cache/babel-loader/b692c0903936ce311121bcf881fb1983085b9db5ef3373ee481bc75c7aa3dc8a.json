{"ast":null,"code":"var _jsxFileName = \"H:\\\\Curso_soy_Henry\\\\Modulo_2\\\\rick_and_morty\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StarField = () => {\n  _s();\n  const [starSizes, setStarSizes] = useState([]);\n  useEffect(() => {\n    const initialSizes = Array(300).fill(20); // Tamaño inicial de las estrellas (20px)\n    setStarSizes(initialSizes);\n    const intervalId = setInterval(() => {\n      const newSizes = starSizes.map(size => {\n        const randomSize = Math.floor(Math.random() * 20) + 10; // Genera un número aleatorio entre 10 y 30\n        return randomSize;\n      });\n      setStarSizes(newSizes);\n    }, 1000);\n    return () => {\n      clearInterval(intervalId); // Limpia el intervalo cuando el componente se desmonta\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"star-field\",\n    children: starSizes.map((size, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"star\",\n      style: {\n        width: `${size}px`,\n        height: `${size}px`\n      }\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(StarField, \"dtq9LpNe/mkY7erDYRapGXWjuRM=\");\n_c = StarField;\nexport default StarField;\n\n// import './App.css';\n// import Cards from './components/Cards/Cards.jsx';\n// import Nav from './components/Nav/Nav.jsx';\n// import About from './components/About/About';\n// import Detail from './components/Detail/Detail';\n// import Form from './Form/Form';\n// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { Routes, Route, useLocation } from 'react-router-dom';\n// import { useNavigate } from 'react-router-dom';\n\n// function App() {\n//    // const cantStars = 300;\n//    const createStart = (top, left) => {\n//       const container = document.body;\n//    //    for (let i = 0; i < cantStars; i++) {\n//          const star = document.createElement('div');\n//          star.className = \"star\";\n//          star.id = \"star\";\n//    //       let size = `${Math.random() * 2}px`;\n//    //       let pTop = `${Math.random() * 100}%`;\n//    //       let pLeft = `${Math.random() * 100}%`;\n\n//    //       star.style.width = size;\n//    //       star.style.height = size;\n//    //       star.style.top = pTop;\n//    //       star.style.left = pLeft;\n\n//          container.appendChild(star);\n//    //    }\n//    }\n\n//    function toggleSize() {\n//       const starElement = document.querySelector('#star');\n//       console.log(starElement.innerText);\n//       const randomSize = Math.floor(Math.random() * 3) + 1; // Genera un número aleatorio entre 10 y 30\n//       starElement.style.width = randomSize + 'px';\n//       starElement.style.height = randomSize + 'px';\n//    }\n\n//    useEffect(() => {\n//       createStart();\n//       setInterval(toggleSize, 600);\n//    }, []);\n\n//    const navegate = useNavigate();\n\n//    const [characters, setCharacters] = useState([]);\n//    const isRaiz = useLocation().pathname === '/';\n//    function onSearch(id) {\n//       if (characters.find(p => p.id === Number(id))) {\n//          alert(\"El personaje que intenta mostrar ya está en pantalla\");\n//          return;\n//       }\n//       axios(`https://rickandmortyapi.com/api/character/${id}`).then(({ data }) => {\n//          if (data.name) {\n//             setCharacters((oldChars) => [...oldChars, data]);\n//          } else {\n//             window.alert('¡No hay personajes con este ID!');\n//          }\n//       });\n//    }\n\n//    const onClose = (index) => {\n//       setCharacters(characters.filter(i => i.id !== index))\n//    };\n\n//    const login = (user) => {\n//       if (process.env.REACT_APP_EMAIL === user.email && process.env.REACT_APP_PASSWORD === user.password) {\n//          return true\n//       }\n//       return false;\n//    }\n\n//    return (\n//       <div className='App'>\n//          {isRaiz ? null : <Nav onSearch={onSearch} />},\n//          <Routes>\n//             <Route path='/' element={<Form login={login} />} />\n//             <Route path='/home' element={\n//                <Cards characters={characters} onClose={onClose} />\n//             } />\n//             <Route path='/about' element={<About />} />\n//             <Route path='/detail/:id' element={<Detail characters={characters} />} />\n//          </Routes>\n//       </div>\n//    );\n// }\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"StarField\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","StarField","_s","starSizes","setStarSizes","initialSizes","Array","fill","intervalId","setInterval","newSizes","map","size","randomSize","Math","floor","random","clearInterval","className","children","index","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["H:/Curso_soy_Henry/Modulo_2/rick_and_morty/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst StarField = () => {\r\n  const [starSizes, setStarSizes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const initialSizes = Array(300).fill(20); // Tamaño inicial de las estrellas (20px)\r\n    setStarSizes(initialSizes);\r\n\r\n    const intervalId = setInterval(() => {\r\n      const newSizes = starSizes.map(size => {\r\n        const randomSize = Math.floor(Math.random() * 20) + 10; // Genera un número aleatorio entre 10 y 30\r\n        return randomSize;\r\n      });\r\n      setStarSizes(newSizes);\r\n    }, 1000);\r\n\r\n    return () => {\r\n      clearInterval(intervalId); // Limpia el intervalo cuando el componente se desmonta\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"star-field\">\r\n      {starSizes.map((size, index) => (\r\n        <div\r\n          key={index}\r\n          className=\"star\"\r\n          style={{ width: `${size}px`, height: `${size}px` }}\r\n        ></div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StarField;\r\n\r\n\r\n\r\n\r\n// import './App.css';\r\n// import Cards from './components/Cards/Cards.jsx';\r\n// import Nav from './components/Nav/Nav.jsx';\r\n// import About from './components/About/About';\r\n// import Detail from './components/Detail/Detail';\r\n// import Form from './Form/Form';\r\n// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import { Routes, Route, useLocation } from 'react-router-dom';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// function App() {\r\n//    // const cantStars = 300;\r\n//    const createStart = (top, left) => {\r\n//       const container = document.body;\r\n//    //    for (let i = 0; i < cantStars; i++) {\r\n//          const star = document.createElement('div');\r\n//          star.className = \"star\";\r\n//          star.id = \"star\";\r\n//    //       let size = `${Math.random() * 2}px`;\r\n//    //       let pTop = `${Math.random() * 100}%`;\r\n//    //       let pLeft = `${Math.random() * 100}%`;\r\n\r\n//    //       star.style.width = size;\r\n//    //       star.style.height = size;\r\n//    //       star.style.top = pTop;\r\n//    //       star.style.left = pLeft;\r\n\r\n//          container.appendChild(star);\r\n//    //    }\r\n//    }\r\n\r\n\r\n//    function toggleSize() {\r\n//       const starElement = document.querySelector('#star');\r\n//       console.log(starElement.innerText);\r\n//       const randomSize = Math.floor(Math.random() * 3) + 1; // Genera un número aleatorio entre 10 y 30\r\n//       starElement.style.width = randomSize + 'px';\r\n//       starElement.style.height = randomSize + 'px';\r\n//    }\r\n\r\n//    useEffect(() => {\r\n//       createStart();\r\n//       setInterval(toggleSize, 600);\r\n//    }, []);\r\n\r\n//    const navegate = useNavigate();\r\n\r\n//    const [characters, setCharacters] = useState([]);\r\n//    const isRaiz = useLocation().pathname === '/';\r\n//    function onSearch(id) {\r\n//       if (characters.find(p => p.id === Number(id))) {\r\n//          alert(\"El personaje que intenta mostrar ya está en pantalla\");\r\n//          return;\r\n//       }\r\n//       axios(`https://rickandmortyapi.com/api/character/${id}`).then(({ data }) => {\r\n//          if (data.name) {\r\n//             setCharacters((oldChars) => [...oldChars, data]);\r\n//          } else {\r\n//             window.alert('¡No hay personajes con este ID!');\r\n//          }\r\n//       });\r\n//    }\r\n\r\n//    const onClose = (index) => {\r\n//       setCharacters(characters.filter(i => i.id !== index))\r\n//    };\r\n\r\n//    const login = (user) => {\r\n//       if (process.env.REACT_APP_EMAIL === user.email && process.env.REACT_APP_PASSWORD === user.password) {\r\n//          return true\r\n//       }\r\n//       return false;\r\n//    }\r\n\r\n//    return (\r\n//       <div className='App'>\r\n//          {isRaiz ? null : <Nav onSearch={onSearch} />},\r\n//          <Routes>\r\n//             <Route path='/' element={<Form login={login} />} />\r\n//             <Route path='/home' element={\r\n//                <Cards characters={characters} onClose={onClose} />\r\n//             } />\r\n//             <Route path='/about' element={<About />} />\r\n//             <Route path='/detail/:id' element={<Detail characters={characters} />} />\r\n//          </Routes>\r\n//       </div>\r\n//    );\r\n// }\r\n\r\n// export default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,MAAMO,YAAY,GAAGC,KAAK,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IAC1CH,YAAY,CAACC,YAAY,CAAC;IAE1B,MAAMG,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnC,MAAMC,QAAQ,GAAGP,SAAS,CAACQ,GAAG,CAACC,IAAI,IAAI;QACrC,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;QACxD,OAAOH,UAAU;MACnB,CAAC,CAAC;MACFT,YAAY,CAACM,QAAQ,CAAC;IACxB,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAM;MACXO,aAAa,CAACT,UAAU,CAAC,CAAC,CAAC;IAC7B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA;IAAKkB,SAAS,EAAC,YAAY;IAAAC,QAAA,EACxBhB,SAAS,CAACQ,GAAG,CAAC,CAACC,IAAI,EAAEQ,KAAK,kBACzBpB,OAAA;MAEEkB,SAAS,EAAC,MAAM;MAChBG,KAAK,EAAE;QAAEC,KAAK,EAAG,GAAEV,IAAK,IAAG;QAAEW,MAAM,EAAG,GAAEX,IAAK;MAAI;IAAE,GAF9CQ,KAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGN,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACzB,EAAA,CA/BID,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AAiCf,eAAeA,SAAS;;AAKxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}