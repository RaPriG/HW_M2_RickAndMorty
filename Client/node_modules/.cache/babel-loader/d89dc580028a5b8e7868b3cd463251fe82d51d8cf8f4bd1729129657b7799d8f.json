{"ast":null,"code":"const {\n  ADD_FAV,\n  REMOVE_FAV,\n  FILTER,\n  ORDER\n} = require('../actions/types');\nconst inicialState = {\n  myFavorites: [],\n  allCharacters: []\n};\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : inicialState;\n  let {\n    type,\n    payload\n  } = arguments.length > 1 ? arguments[1] : undefined;\n  switch (type) {\n    case ADD_FAV:\n      return {\n        ...state,\n        myFavorites: [...state.myFavorites, payload],\n        allCharacters: [...state.allCharacters, payload]\n      };\n    case REMOVE_FAV:\n      return {\n        ...state,\n        myFavorites: state.myFavorites.filter(personaje => personaje.id !== Number(payload))\n      };\n    case FILTER:\n      const filterGender = [...state.allCharacters].filter(personaje => personaje.gender === payload);\n      return {\n        ...state,\n        allCharacters: filterGender,\n        myFavorites: filterGender\n      };\n    case ORDER:\n      let newArray = [...state.myFavorites];\n      if (payload.toUpperCase() === \"A\") {\n        newArray = newArray.sort((a, b) => a.name.toUpperCase().chartCodeAt(0) - b.nombre.toUpperCase().chartCodeAt(0));\n      } else if (payload.toUpperCase() === \"D\") {\n        newArray = newArray.sort((a, b) => b.name.toUpperCase().chartCodeAt(0) - a.nombre.toUpperCase().chartCodeAt(0));\n      }\n      return {\n        ...state,\n        myFavorites: newArray\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["ADD_FAV","REMOVE_FAV","FILTER","ORDER","require","inicialState","myFavorites","allCharacters","rootReducer","state","arguments","length","undefined","type","payload","filter","personaje","id","Number","filterGender","gender","newArray","toUpperCase","sort","a","b","name","chartCodeAt","nombre"],"sources":["H:/Curso_soy_Henry/ProyectoIntegradorM2/HW_M2_RickAndMorty/src/redux/reducer/index.js"],"sourcesContent":["const { ADD_FAV, REMOVE_FAV, FILTER, ORDER } = require('../actions/types');\r\nconst inicialState = {\r\n    myFavorites: [],\r\n    allCharacters: [],\r\n}\r\n\r\n\r\nconst rootReducer = (state = inicialState, { type, payload }) => {\r\n    switch (type) {\r\n        case ADD_FAV:\r\n            return {\r\n                ...state,\r\n                myFavorites: [...state.myFavorites, payload],\r\n                allCharacters: [...state.allCharacters, payload]\r\n            }\r\n\r\n        case REMOVE_FAV:\r\n            return {\r\n                ...state,\r\n                myFavorites: state.myFavorites.filter(personaje => personaje.id !== Number(payload))\r\n            }\r\n        case FILTER:\r\n            const filterGender = [...state.allCharacters].filter(personaje => personaje.gender === payload);\r\n            return {\r\n                ...state,\r\n                allCharacters: filterGender,\r\n                myFavorites: filterGender,\r\n            }\r\n        case ORDER:\r\n            let newArray = [...state.myFavorites];\r\n            if (payload.toUpperCase() === \"A\") {\r\n                newArray = newArray.sort((a, b) => (\r\n                    a.name.toUpperCase().chartCodeAt(0) - b.nombre.toUpperCase().chartCodeAt(0)\r\n                ));\r\n            } else if (payload.toUpperCase() === \"D\") {\r\n                newArray = newArray.sort((a, b) => (\r\n                    b.name.toUpperCase().chartCodeAt(0) - a.nombre.toUpperCase().chartCodeAt(0)\r\n                ));\r\n            }\r\n            return {\r\n                ...state,\r\n                myFavorites: newArray,\r\n            }\r\n\r\n        default: return { ...state }\r\n    }\r\n}\r\n\r\nexport default rootReducer;"],"mappings":"AAAA,MAAM;EAAEA,OAAO;EAAEC,UAAU;EAAEC,MAAM;EAAEC;AAAM,CAAC,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAC1E,MAAMC,YAAY,GAAG;EACjBC,WAAW,EAAE,EAAE;EACfC,aAAa,EAAE;AACnB,CAAC;AAGD,MAAMC,WAAW,GAAG,SAAAA,CAAA,EAA6C;EAAA,IAA5CC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGL,YAAY;EAAA,IAAE;IAAEQ,IAAI;IAAEC;EAAQ,CAAC,GAAAJ,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACxD,QAAQC,IAAI;IACR,KAAKb,OAAO;MACR,OAAO;QACH,GAAGS,KAAK;QACRH,WAAW,EAAE,CAAC,GAAGG,KAAK,CAACH,WAAW,EAAEQ,OAAO,CAAC;QAC5CP,aAAa,EAAE,CAAC,GAAGE,KAAK,CAACF,aAAa,EAAEO,OAAO;MACnD,CAAC;IAEL,KAAKb,UAAU;MACX,OAAO;QACH,GAAGQ,KAAK;QACRH,WAAW,EAAEG,KAAK,CAACH,WAAW,CAACS,MAAM,CAACC,SAAS,IAAIA,SAAS,CAACC,EAAE,KAAKC,MAAM,CAACJ,OAAO,CAAC;MACvF,CAAC;IACL,KAAKZ,MAAM;MACP,MAAMiB,YAAY,GAAG,CAAC,GAAGV,KAAK,CAACF,aAAa,CAAC,CAACQ,MAAM,CAACC,SAAS,IAAIA,SAAS,CAACI,MAAM,KAAKN,OAAO,CAAC;MAC/F,OAAO;QACH,GAAGL,KAAK;QACRF,aAAa,EAAEY,YAAY;QAC3Bb,WAAW,EAAEa;MACjB,CAAC;IACL,KAAKhB,KAAK;MACN,IAAIkB,QAAQ,GAAG,CAAC,GAAGZ,KAAK,CAACH,WAAW,CAAC;MACrC,IAAIQ,OAAO,CAACQ,WAAW,CAAC,CAAC,KAAK,GAAG,EAAE;QAC/BD,QAAQ,GAAGA,QAAQ,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAC1BD,CAAC,CAACE,IAAI,CAACJ,WAAW,CAAC,CAAC,CAACK,WAAW,CAAC,CAAC,CAAC,GAAGF,CAAC,CAACG,MAAM,CAACN,WAAW,CAAC,CAAC,CAACK,WAAW,CAAC,CAAC,CAC7E,CAAC;MACN,CAAC,MAAM,IAAIb,OAAO,CAACQ,WAAW,CAAC,CAAC,KAAK,GAAG,EAAE;QACtCD,QAAQ,GAAGA,QAAQ,CAACE,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAC1BA,CAAC,CAACC,IAAI,CAACJ,WAAW,CAAC,CAAC,CAACK,WAAW,CAAC,CAAC,CAAC,GAAGH,CAAC,CAACI,MAAM,CAACN,WAAW,CAAC,CAAC,CAACK,WAAW,CAAC,CAAC,CAC7E,CAAC;MACN;MACA,OAAO;QACH,GAAGlB,KAAK;QACRH,WAAW,EAAEe;MACjB,CAAC;IAEL;MAAS,OAAO;QAAE,GAAGZ;MAAM,CAAC;EAChC;AACJ,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}